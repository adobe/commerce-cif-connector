version: 2.1

orbs:
  codecov: codecov/codecov@1.0.5

common:
  restore_cache: &restore_cache
    restore_cache:
      keys: 
        - maven-repo-v2-{{ arch }}-{{ .Branch }}-{{ checksum "pom.xml" }}
        - maven-repo-v2-{{ arch }}-{{ .Branch }}
        - maven-repo-v2-

  integration_test_steps: &integration_test_steps
    steps:
      - checkout
      - *restore_cache
      - attach_workspace:
          at: /home/circleci/build
      - run:
          name: Integration tests
          command: node .circleci/ci/it-tests.js
      - store_test_results:
          path: it/http/target/failsafe-reports
      # Save test results as artifacts
      - store_artifacts:
          path: it/http/target/failsafe-reports
      # Save AEM logs as artifacts
      - store_artifacts:
          path: logs
      # Save Jacoco coverage report as artifact
      - store_artifacts:
          path: bundles/cif-connector-graphql/target/site/jacoco
      - store_artifacts:
          path: bundles/cif-virtual-catalog/target/site/jacoco

  docker_auth: &docker_auth
    auth:
      username: $DOCKER_USER
      password: $DOCKER_PASS

jobs:
  build:
    docker:
      - image: circleci/openjdk:11-stretch-node
    working_directory: /home/circleci/build
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Build
          command: node .circleci/ci/build.js
      - save_cache:
          paths:
            - /home/circleci/.m2
          key: maven-repo-v2-{{ arch }}-{{ .Branch }}-{{ checksum "pom.xml" }}
      - persist_to_workspace:
          root: /home/circleci/build
          paths:
            - configuration.json
            - bundles/*/target/*.jar
            - content/*/target/*.zip
            - it/content/target/*.zip
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results/junit
      - codecov/upload:
          conf: .circleci/codecov.yml
          flags: unittests

  karma:
    docker:
      - image: circleci/node:lts-browsers
    steps:
      - checkout
      - run:
          name: Provision
          command: |
            node -v
            npm -v
            npm install
          working_directory: content/cif-connector/tests
      - run:
          name: Run Unit Tests (Karma)
          command: npm test
          working_directory: content/cif-connector/tests
      - store_test_results:
          path: content/cif-connector/tests/karma-junit
      - store_artifacts:
          path: content/cif-connector/tests/karma-junit
      - codecov/upload:
          conf: .circleci/codecov.yml
          flags: karma


  integration-test-652:
    docker:
      - image: docker-adobe-cif-release.dr-uw2.adobeitc.com/circleci-qp:6.4.4-jdk11
        <<: *docker_auth
      - image: docker-adobe-cif-release.dr-uw2.adobeitc.com/circleci-aem:6.5.2
        <<: *docker_auth
    resource_class: large
    working_directory: /home/circleci/build
    <<: *integration_test_steps


  integration-test-646:
    docker:
      - image: docker-adobe-cif-release.dr-uw2.adobeitc.com/circleci-qp:6.4.4-jdk8
        <<: *docker_auth
      - image: docker-adobe-cif-release.dr-uw2.adobeitc.com/circleci-aem:6.4.6
        <<: *docker_auth
    resource_class: large
    working_directory: /home/circleci/build
    <<: *integration_test_steps


  release:
    docker:
      - image: circleci/openjdk:11-stretch-node
    working_directory: /home/circleci/build
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Release
          # Only performs a 'mvn deploy' after the 'mvn release:prepare' because circleCI
          # already checks out the git tag like 'mvn release:perform' would do.
          # The "skip-it" property ensures that we do not release the integration tests sub-modules
          command: |
            echo $GPG_PRIVATE_KEY | base64 --decode | gpg --batch --import
            mvn -B -s /home/circleci/project/.circleci/settings.xml clean deploy -Prelease-sign-artifacts -Dskip-it
            rm -rf /home/circleci/.gnupg


workflows:
  version: 2
  build-and-release:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - karma:
          filters:
            tags:
              only: /.*/
      - integration-test-652:
          filters:
            tags:
              only: /.*/
          requires:
            - build
            - karma
      - integration-test-646:
          filters:
            tags:
              only: /.*/
          requires:
            - build
            - karma
      - release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^cif-connector-reactor-\d+\.\d+\.\d+$/
